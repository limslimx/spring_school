<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="poly.persistance.mapper.UserMapper">
	<!-- 회원 가입하기(회원정보 등록하기) -->
	<insert id="insertUserInfo" parameterType="UserDTO">
		INSERT INTO USER_INFO(
			USER_ID,
			USER_NAME,
			PASSWORD,
			EMAIL,
			REG_ID,
			REG_DT,
			CHG_ID,
			CHG_DT
		) VALUES(
			#{user_id},
			#{user_name},
			#{password},
			#{email},
			#{user_id},
			SYSDATE,
			#{user_id},
			SYSDATE
		)
		
	</insert>
	<!-- 이메일로 회원가입 중복 방지하기 -->
	<select id="getUserExists" parameterType="UserDTO" resultType="UserDTO">
	<!-- DECODE함수는 sql의 case...when...then함수랑 같다고 보면 됨 -->
		SELECT DECODE(COUNT(1), 0, 'N', 'Y') AS EXISTS_YN
			FROM USER_INFO
			WHERE EMAIL=#{email}
	</select>
	
	<select id="signInCheck" parameterType="UserDTO" resultType="UserDTO">
		SELECT USER_ID
			FROM USER_INFO
		WHERE USER_ID=#{user_id} AND PASSWORD=#{password}
	
	</select>
	
	<select id="idCheck" parameterType="String" resultType="UserDTO">
		SELECT USER_ID FROM USER_INFO WHERE USER_ID = #{user_id}
	</select>
	
	<select id="emailCheck" parameterType="String" resultType="UserDTO">
		SELECT EMAIL FROM USER_INFO WHERE EMAIL = #{email}
	</select>

	<select id="findUserId" parameterType="UserDTO" resultType="UserDTO">
		SELECT USER_ID
			FROM USER_INFO
		WHERE EMAIL=#{email}
	</select>
	
	<update id="findUserPw" parameterType="UserDTO">
		UPDATE USER_INFO SET PASSWORD=#{password} where USER_ID=#{user_id}
	</update>
	
	<select id="getUserInfo" parameterType="UserDTO" resultType="UserDTO">
		SELECT EMAIL, PASSWORD FROM USER_INFO WHERE USER_ID=#{user_id}
	</select>
	
	<select id="pwCheck" parameterType="UserDTO" resultType="UserDTO">
		SELECT PASSWORD FROM USER_INFO WHERE USER_ID=#{user_id}
	</select>
	
	<select id="getMypage" parameterType="UserDTO" resultType="UserDTO">
		SELECT USER_NAME, USER_ID, EMAIL FROM USER_INFO WHERE USER_ID=#{user_id}
	</select>
	
	<update id="changeName" parameterType="UserDTO">
		UPDATE USER_INFO SET USER_NAME=#{user_name} WHERE USER_ID=#{user_id}
	</update>
	
	<update id="changeEmail" parameterType="UserDTO">
		UPDATE USER_INFO SET EMAIL=#{email} WHERE USER_ID=#{user_id}
	</update>
	
	<update id="changePw" parameterType="UserDTO">
		UPDATE USER_INFO SET PASSWORD=#{password} where USER_ID=#{user_id}
	</update>
	
	<delete id="deleteUserInfo" parameterType="UserDTO">
		DELETE FROM USER_INFO
		WHERE USER_ID = #{user_id}
	</delete>
	
</mapper>